// <auto-generated />
using Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AWebAPIPractice.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221027092909_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 16,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 18,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 19,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        },
                        new
                        {
                            Id = 20,
                            Address = "Generic Address",
                            Country = "We Dont know",
                            Name = "Generic IT Company"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 7,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 8,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 9,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 10,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 11,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 12,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = 13,
                            Age = 26,
                            CompanyId = 7,
                            Name = "Generic Name",
                            Position = "Software Developer"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.HasOne("Entities.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
